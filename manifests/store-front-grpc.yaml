#API Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi-app
  labels:
    run: fastapi-app
spec:
  replicas: 1
  selector:
    matchLabels:
      run: fastapi-app
  template:
    metadata:
      annotations:
          prometheus.io/scrape: "true"  # Ativa a coleta de métricas
          prometheus.io/path: "/metrics"  # Caminho onde as métricas são expostas
          prometheus.io/port: "8000"  # Porta onde as métricas são expostas
      labels:
        run: fastapi-app
    spec:
      containers:
      - name: fastapi-container
        image: docker.io/grupo2sd2024/fastapi-app:latest  
        env:
            - name: GRPC_SERVER1_HOST
              value: "grpc-server1-service" #MUDAR
            - name: GRPC_SERVER2_HOST
              value: "product-grpc"
        ports:
        - containerPort: 8000
        resources:
          requests:
            cpu: 500m
            memory: 128Mi
          limits:
            cpu: 1000m
            memory: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: fastapi-app
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8000
    targetPort: 8000
  selector:
    run: fastapi-app
--- 
# Store Front
apiVersion: apps/v1
kind: Deployment
metadata:
  name: store-grpc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: store-grpc
  template:
    metadata:
      labels:
        app: store-grpc
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: store-grpc
        image: docker.io/grupo2sd2024/store-front-grpc:latest
        ports:
        - containerPort: 8080
          name: store-grpc
        env: 
        - name: VUE_APP_ORDER_SERVICE_URL
          value: "http://order-service:3000/"
        - name: VUE_APP_PRODUCT_SERVICE_URL
          value: "http://fastapi-app:8000/get-products"
        resources:
          requests:
            cpu: 1m
            memory: 200Mi
          limits:
            cpu: 1000m
            memory: 512Mi
        startupProbe:
          httpGet:
            path: /health
            port: 8080
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          failureThreshold: 3
          initialDelaySeconds: 3
          periodSeconds: 3
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          failureThreshold: 5
          initialDelaySeconds: 3
          periodSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: store-grpc-service
spec:
  ports:
  - port: 80
    targetPort: 8080
    nodePort: 30003
  selector:
    app: store-grpc
  type: NodePort